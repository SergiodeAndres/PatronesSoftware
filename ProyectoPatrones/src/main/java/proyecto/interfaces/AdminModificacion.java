/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto.interfaces;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import proyecto.clases.Antivirus;
import proyecto.clases.Creador;
import proyecto.clases.Dolar;
import proyecto.clases.Factoria;
import proyecto.clases.FactoriaConcreta;
import proyecto.clases.LecturaBBDD;
import proyecto.clases.Productividad;
import proyecto.clases.Producto;
import proyecto.clases.Proxy;
import proyecto.clases.Review;
import proyecto.clases.Servidor;
import proyecto.clases.ServidorBBDD;
import proyecto.clases.Videojuego;

/**
 *
 * @author paser
 */
public class AdminModificacion extends javax.swing.JFrame {

    /**
     * Creates new form AdminModificacion
     */
    private Servidor proxy = new Proxy(new ServidorBBDD());
    private JFrame principal;
    private Creador creador;
    private Producto producto;
    private String clase;
    private LecturaBBDD lectura = new LecturaBBDD(proxy.getVideojuegos(), proxy.getProductividad(), proxy.getAntivirus());
    
    public AdminModificacion(JFrame v, Creador c, Object o, String clase) {
        initComponents();
        
        principal = v;
        principal.setVisible(false);
        this.setVisible(true);
        creador = c;
        this.clase = clase;
        
        cargarInformacion(o, clase);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ADMIN");

        jLabel2.setText("Tipo de producto:");

        jLabel3.setText("Tipo de producto");

        jLabel4.setText("Nombre:");

        jLabel5.setText("Descripci√≥n:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel6.setText("Precio:");

        jButton1.setText("Modificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar reviews");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addComponent(jLabel3)
                                    .addComponent(jTextField2))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nombre = jTextField1.getText();
        String codigoInterno = producto.getCondigoInterno();
        String descripcion = jTextArea1.getText();
        LocalDate fecha = producto.getFechaCreacion();
        String precio = jTextField2.getText();
        String caratula = producto.getCaratula();
        String valoracion = producto.getValoracionGeneral();
        ArrayList<Review> reviews = producto.getReviews();
        ArrayList<String> limitacionesTecnicas = producto.getLimitacionesTecnicas();
        boolean aprobado = producto.isAprobado();

        switch (clase) {
            case "Videojuego" -> {
                Videojuego v_antiguo = (Videojuego) producto;
                ArrayList<String> generos = v_antiguo.getGeneros();
                ArrayList<String> otrasPlataformas = v_antiguo.getOtrasPlataformas();
                int jugadores = v_antiguo.getJugadores();
                boolean multijugador = v_antiguo.isMultijugador();
                boolean online = v_antiguo.isOnline();

                if (!nombre.isEmpty() && !descripcion.isEmpty()  && esDouble(precio)) {
                    
                    Factoria fabrica = FactoriaConcreta.getInstanciaUnica();
                    Videojuego v = fabrica.crearProducto(generos, otrasPlataformas, multijugador,
                            jugadores, online, nombre, codigoInterno, creador, descripcion, fecha, new Dolar(Double.parseDouble(precio)),
                            caratula, valoracion, reviews, limitacionesTecnicas, aprobado);
                    proxy.removeVideojuego(codigoInterno);
                    proxy.addVideojuego(v);
                    proxy.guardarVideojuegos();
                    this.setVisible(false);
                    principal.setVisible(true);

                }else {
                    JOptionPane.showMessageDialog(this, "Error: Rellena todos los campos.");
                }
            }
            case "Productividad" -> {
                Productividad p_antigua = (Productividad) producto;
                String versionActual = p_antigua.getVersionActual();
                LocalDate fechaVersionActual = p_antigua.getFechaVersionActual();
                String tipo = p_antigua.getTipo();

                if (!nombre.isEmpty() && !descripcion.isEmpty() && esDouble(precio)) {

                    Factoria fabrica = FactoriaConcreta.getInstanciaUnica();
                    Productividad p = fabrica.crearProducto(versionActual, fechaVersionActual, tipo, nombre, codigoInterno,
                            creador, descripcion, fecha, new Dolar(Double.parseDouble(precio)), caratula,
                            valoracion, reviews, limitacionesTecnicas, aprobado);
                    proxy.removeProductividad(codigoInterno);
                    proxy.addProductividad(p);
                    proxy.guardarProductividad();
                    this.setVisible(false);
                    principal.setVisible(true);

                } else {
                    JOptionPane.showMessageDialog(this, "Error: Rellene todos los campos.");
                }
            }
            case "Antivirus" -> {
                Antivirus a_antiguo = (Antivirus) producto;
                String versionActual = a_antiguo.getVersionActual();
                LocalDate fechaVersionActual = a_antiguo.getFechaVersionActual();
                ArrayList<String> certificaciones = a_antiguo.getCertificaciones();
                
                if (!nombre.isEmpty() && !descripcion.isEmpty() && esDouble(precio)) {
                    
                    Factoria fabrica = FactoriaConcreta.getInstanciaUnica();
                    Antivirus a = fabrica.crearProducto(versionActual, LocalDate.now(), certificaciones, nombre,
                            codigoInterno, creador, descripcion, fecha, new Dolar(Double.parseDouble(precio)), caratula,
                            valoracion, reviews, limitacionesTecnicas, aprobado);
                    proxy.removeAntivirus(codigoInterno);
                    proxy.addAntivirus(a);
                    proxy.guardarAntivirus();
                    this.setVisible(false);
                    principal.setVisible(true);

                } else {
                    JOptionPane.showMessageDialog(this, "Error: Rellene todos los campos.");
                }
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        proxy.getProductoByNombre(producto.getNombre()).setReviews(new ArrayList<>());
        proxy.guardarAntivirus();
        proxy.guardarVideojuegos();
        proxy.guardarProductividad();
    }//GEN-LAST:event_jButton2ActionPerformed

    private boolean esDouble(String numero) {
        Pattern pat = Pattern.compile("^[0-9]{1,20}\\.[0-9]{2}$");
        Matcher mat = pat.matcher(numero);
        if (mat.find()) {
            return mat.group().equals(numero);
        } else {
            return false;
        }
    }
    
    private void cargarInformacion(Object o, String clase) {
        switch (clase) {
            case "Videojuego" -> {
                Videojuego v = (Videojuego) o;
                producto = v;
                jLabel3.setText("Videojuego");
                jTextField1.setText(v.getNombre());
                jTextArea1.setText(v.getDescripcion());
                jTextField2.setText(String.valueOf(v.getPrecio().getCantidad()));
            }
            case "Productividad" -> {
                Productividad p = (Productividad) o;
                producto = p;
                jLabel3.setText("Productividad");
                jTextField1.setText(p.getNombre());
                jTextArea1.setText(p.getDescripcion());
                jTextField2.setText(String.valueOf(p.getPrecio().getCantidad()));
            }
            case "Antivirus" -> {
                Antivirus a = (Antivirus) o;
                producto = a;
                jLabel3.setText("Antivirus");
                jTextField1.setText(a.getNombre());
                jTextArea1.setText(a.getDescripcion());
                jTextField2.setText(String.valueOf(a.getPrecio().getCantidad()));
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
